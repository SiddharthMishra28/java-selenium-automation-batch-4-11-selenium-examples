<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-11T08:57:16 IST" name="Default suite" finished-at="2024-06-11T08:57:53 IST" duration-ms="36822">
    <groups>
    </groups>
    <test started-at="2024-06-11T08:57:16 IST" name="Default test" finished-at="2024-06-11T08:57:53 IST" duration-ms="36822">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:15 IST" name="beforeSuite" finished-at="2024-06-11T08:57:16 IST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:16 IST" name="beforeTest" finished-at="2024-06-11T08:57:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:18 IST" name="beforeMethod" finished-at="2024-06-11T08:57:21 IST" duration-ms="3153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginIntoPortal_test(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:21 IST" name="LoginIntoPortal_test" data-provider="login_provider" finished-at="2024-06-11T08:57:25 IST" duration-ms="4418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginIntoPortal_test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:25 IST" name="afterMethod" finished-at="2024-06-11T08:57:26 IST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:26 IST" name="beforeMethod" finished-at="2024-06-11T08:57:28 IST" duration-ms="2256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginIntoPortal_test(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:28 IST" name="LoginIntoPortal_test" data-provider="login_provider" finished-at="2024-06-11T08:57:32 IST" duration-ms="4170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[mngr542003]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sldjsalkd]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginIntoPortal_test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:32 IST" name="afterMethod" finished-at="2024-06-11T08:57:33 IST" duration-ms="314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:33 IST" name="beforeMethod" finished-at="2024-06-11T08:57:35 IST" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginIntoPortal_test(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:35 IST" name="LoginIntoPortal_test" data-provider="login_provider" finished-at="2024-06-11T08:57:39 IST" duration-ms="4639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jdsaldsal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nyseqAn]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginIntoPortal_test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:39 IST" name="afterMethod" finished-at="2024-06-11T08:57:40 IST" duration-ms="341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:40 IST" name="beforeMethod" finished-at="2024-06-11T08:57:42 IST" duration-ms="2244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginIntoPortal_test(java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:42 IST" name="LoginIntoPortal_test" data-provider="login_provider" finished-at="2024-06-11T08:57:46 IST" duration-ms="3671" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:96)
at utils.UIAutomationUtils.typeIntoInput(UIAutomationUtils.java:23)
at pages.LoginPage.login(LoginPage.java:21)
at tests.LoginTest.LoginIntoPortal_test(LoginTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginIntoPortal_test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:46 IST" name="afterMethod" finished-at="2024-06-11T08:57:46 IST" duration-ms="281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:46 IST" name="beforeMethod" finished-at="2024-06-11T08:57:48 IST" duration-ms="2395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="loginPortal_reset_input_test()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:48 IST" name="loginPortal_reset_input_test" finished-at="2024-06-11T08:57:52 IST" duration-ms="4166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPortal_reset_input_test -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:52 IST" name="afterMethod" finished-at="2024-06-11T08:57:53 IST" duration-ms="286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:53 IST" name="afterTest" finished-at="2024-06-11T08:57:53 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:tests.LoginTest@229f66ed]" started-at="2024-06-11T08:57:53 IST" name="afterSuite" finished-at="2024-06-11T08:57:54 IST" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
